Summary of data analysis progress                                   Dec 14 2022 JFD

Usage
----

Calling the code on "Dooley" windows Laptop in IBCA

RECOMMENDED:
    set "IN" and "REJECT" path variables in main.py. Save.
    open powershell
    > cd ~/Desktop/RidgeTrack-v2
    > python main.py

    NB main.py uses DoolCentroid.py

The same processing can be done using the less Object oriented program:
    set "IN" and "REJECT" path variables in standalone.py. Save.
    open powershell
    > cd ~/Desktop/RidgeTrack-v2
    > python standalone.py

    NB standalone.py does NOT use DoolCentroid.py but is similar. 
    this approach is less efficent and much more prone to bugs as it is updated.

Summary
----

DoolCentroid is a class that processes the jpg images from input_directory, 
estimates each frame's background, detects beam locations and creates "windows",
then calcuates the CoM centroid of the spots contained in the windows.

Class funtions are summarized below, more detail is available as in-code comments. 

DoolCentroid.EstimateBackground():
    estimates background for each image using median filter with default size 40pix. 
    new background estimates are only created when the current image average changes 
    significantly from the previous image to save processing time.

DoolCentroid.CreateWindows():
    uses thresholding and scipy.ndimage functions to detect beam locations in background-reduced images.
    windows take into account all images and grow according to beam motion.

DoolCentroid.LocateCentroids():
    determines CoM centroid within each window. window is created by cropping background-reduced images.
    stores centroid data to DoolCentroid.CentroidDataFrame class variable.

DoolCentroid.CreateDataCSV():
    saves data to csv file. Care was made to ensure that output csv matched previous csv files created with
    the original RidgeTrack program from 2019.

DoolCentroid.CreateGifs():
    creates gifs for visual inspection. generated gifs are not expected to reveal quantitative data, but serve
    as a straight forward method of first approximation centroid validation and can be used for qualitative 
    discussions of beam motion.  


Notes
---

While beam intensity doesnt change, IBCA lights turing on increaes the background and therefore the resultant 
reduced image beam appears to be much dimmer. CoM centroiding shouldnt be effected too much by this, since windows
are static across images, but may want to play with filter sizes and/or make the size dynamic based on average counts. 

to upgrade libraries:
    powershell
    > python -m pip install --upgrade pip
    > python -m pip install --upgrade <package_name>
